// Generated by view binder compiler. Do not edit!
package com.thesis.fixitadmin.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.thesis.fixitadmin.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ShareBottomSheetBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout appshare;

  @NonNull
  public final ConstraintLayout chatshare;

  @NonNull
  public final ConstraintLayout groupShare;

  @NonNull
  public final ImageView imageView46;

  @NonNull
  public final ImageView imageView5;

  @NonNull
  public final ImageView imageView6;

  private ShareBottomSheetBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout appshare, @NonNull ConstraintLayout chatshare,
      @NonNull ConstraintLayout groupShare, @NonNull ImageView imageView46,
      @NonNull ImageView imageView5, @NonNull ImageView imageView6) {
    this.rootView = rootView;
    this.appshare = appshare;
    this.chatshare = chatshare;
    this.groupShare = groupShare;
    this.imageView46 = imageView46;
    this.imageView5 = imageView5;
    this.imageView6 = imageView6;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ShareBottomSheetBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ShareBottomSheetBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.share_bottom_sheet, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ShareBottomSheetBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appshare;
      ConstraintLayout appshare = ViewBindings.findChildViewById(rootView, id);
      if (appshare == null) {
        break missingId;
      }

      id = R.id.chatshare;
      ConstraintLayout chatshare = ViewBindings.findChildViewById(rootView, id);
      if (chatshare == null) {
        break missingId;
      }

      id = R.id.groupShare;
      ConstraintLayout groupShare = ViewBindings.findChildViewById(rootView, id);
      if (groupShare == null) {
        break missingId;
      }

      id = R.id.imageView46;
      ImageView imageView46 = ViewBindings.findChildViewById(rootView, id);
      if (imageView46 == null) {
        break missingId;
      }

      id = R.id.imageView5;
      ImageView imageView5 = ViewBindings.findChildViewById(rootView, id);
      if (imageView5 == null) {
        break missingId;
      }

      id = R.id.imageView6;
      ImageView imageView6 = ViewBindings.findChildViewById(rootView, id);
      if (imageView6 == null) {
        break missingId;
      }

      return new ShareBottomSheetBinding((ConstraintLayout) rootView, appshare, chatshare,
          groupShare, imageView46, imageView5, imageView6);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
