// Generated by view binder compiler. Do not edit!
package com.thesis.fixitadmin.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.thesis.fixitadmin.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMenuBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout analytics;

  @NonNull
  public final ConstraintLayout delete;

  @NonNull
  public final ConstraintLayout email;

  @NonNull
  public final ConstraintLayout followers;

  @NonNull
  public final ConstraintLayout following;

  @NonNull
  public final ConstraintLayout header;

  @NonNull
  public final ImageView imageAnalytics;

  @NonNull
  public final ImageView imageView19;

  @NonNull
  public final ImageView imageView197;

  @NonNull
  public final ImageView imageView3;

  @NonNull
  public final ImageView imageView4;

  @NonNull
  public final ImageView imageView49;

  @NonNull
  public final ImageView imageView79;

  @NonNull
  public final ImageView imageView8;

  @NonNull
  public final ImageView imageView89;

  @NonNull
  public final ImageView imageView9;

  @NonNull
  public final ImageView imageView92;

  @NonNull
  public final ImageView imageView97;

  @NonNull
  public final ImageView imageView99;

  @NonNull
  public final ConstraintLayout invite;

  @NonNull
  public final ConstraintLayout logout;

  @NonNull
  public final Switch mySwitch;

  @NonNull
  public final ConstraintLayout night;

  @NonNull
  public final ConstraintLayout password;

  @NonNull
  public final ConstraintLayout policy;

  @NonNull
  public final ConstraintLayout save;

  @NonNull
  public final TextView textView11;

  private ActivityMenuBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout analytics, @NonNull ConstraintLayout delete,
      @NonNull ConstraintLayout email, @NonNull ConstraintLayout followers,
      @NonNull ConstraintLayout following, @NonNull ConstraintLayout header,
      @NonNull ImageView imageAnalytics, @NonNull ImageView imageView19,
      @NonNull ImageView imageView197, @NonNull ImageView imageView3, @NonNull ImageView imageView4,
      @NonNull ImageView imageView49, @NonNull ImageView imageView79, @NonNull ImageView imageView8,
      @NonNull ImageView imageView89, @NonNull ImageView imageView9, @NonNull ImageView imageView92,
      @NonNull ImageView imageView97, @NonNull ImageView imageView99,
      @NonNull ConstraintLayout invite, @NonNull ConstraintLayout logout, @NonNull Switch mySwitch,
      @NonNull ConstraintLayout night, @NonNull ConstraintLayout password,
      @NonNull ConstraintLayout policy, @NonNull ConstraintLayout save,
      @NonNull TextView textView11) {
    this.rootView = rootView;
    this.analytics = analytics;
    this.delete = delete;
    this.email = email;
    this.followers = followers;
    this.following = following;
    this.header = header;
    this.imageAnalytics = imageAnalytics;
    this.imageView19 = imageView19;
    this.imageView197 = imageView197;
    this.imageView3 = imageView3;
    this.imageView4 = imageView4;
    this.imageView49 = imageView49;
    this.imageView79 = imageView79;
    this.imageView8 = imageView8;
    this.imageView89 = imageView89;
    this.imageView9 = imageView9;
    this.imageView92 = imageView92;
    this.imageView97 = imageView97;
    this.imageView99 = imageView99;
    this.invite = invite;
    this.logout = logout;
    this.mySwitch = mySwitch;
    this.night = night;
    this.password = password;
    this.policy = policy;
    this.save = save;
    this.textView11 = textView11;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMenuBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMenuBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_menu, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMenuBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.analytics;
      ConstraintLayout analytics = ViewBindings.findChildViewById(rootView, id);
      if (analytics == null) {
        break missingId;
      }

      id = R.id.delete;
      ConstraintLayout delete = ViewBindings.findChildViewById(rootView, id);
      if (delete == null) {
        break missingId;
      }

      id = R.id.email;
      ConstraintLayout email = ViewBindings.findChildViewById(rootView, id);
      if (email == null) {
        break missingId;
      }

      id = R.id.followers;
      ConstraintLayout followers = ViewBindings.findChildViewById(rootView, id);
      if (followers == null) {
        break missingId;
      }

      id = R.id.following;
      ConstraintLayout following = ViewBindings.findChildViewById(rootView, id);
      if (following == null) {
        break missingId;
      }

      id = R.id.header;
      ConstraintLayout header = ViewBindings.findChildViewById(rootView, id);
      if (header == null) {
        break missingId;
      }

      id = R.id.image_analytics;
      ImageView imageAnalytics = ViewBindings.findChildViewById(rootView, id);
      if (imageAnalytics == null) {
        break missingId;
      }

      id = R.id.imageView19;
      ImageView imageView19 = ViewBindings.findChildViewById(rootView, id);
      if (imageView19 == null) {
        break missingId;
      }

      id = R.id.imageView197;
      ImageView imageView197 = ViewBindings.findChildViewById(rootView, id);
      if (imageView197 == null) {
        break missingId;
      }

      id = R.id.imageView3;
      ImageView imageView3 = ViewBindings.findChildViewById(rootView, id);
      if (imageView3 == null) {
        break missingId;
      }

      id = R.id.imageView4;
      ImageView imageView4 = ViewBindings.findChildViewById(rootView, id);
      if (imageView4 == null) {
        break missingId;
      }

      id = R.id.imageView49;
      ImageView imageView49 = ViewBindings.findChildViewById(rootView, id);
      if (imageView49 == null) {
        break missingId;
      }

      id = R.id.imageView79;
      ImageView imageView79 = ViewBindings.findChildViewById(rootView, id);
      if (imageView79 == null) {
        break missingId;
      }

      id = R.id.imageView8;
      ImageView imageView8 = ViewBindings.findChildViewById(rootView, id);
      if (imageView8 == null) {
        break missingId;
      }

      id = R.id.imageView89;
      ImageView imageView89 = ViewBindings.findChildViewById(rootView, id);
      if (imageView89 == null) {
        break missingId;
      }

      id = R.id.imageView9;
      ImageView imageView9 = ViewBindings.findChildViewById(rootView, id);
      if (imageView9 == null) {
        break missingId;
      }

      id = R.id.imageView92;
      ImageView imageView92 = ViewBindings.findChildViewById(rootView, id);
      if (imageView92 == null) {
        break missingId;
      }

      id = R.id.imageView97;
      ImageView imageView97 = ViewBindings.findChildViewById(rootView, id);
      if (imageView97 == null) {
        break missingId;
      }

      id = R.id.imageView99;
      ImageView imageView99 = ViewBindings.findChildViewById(rootView, id);
      if (imageView99 == null) {
        break missingId;
      }

      id = R.id.invite;
      ConstraintLayout invite = ViewBindings.findChildViewById(rootView, id);
      if (invite == null) {
        break missingId;
      }

      id = R.id.logout;
      ConstraintLayout logout = ViewBindings.findChildViewById(rootView, id);
      if (logout == null) {
        break missingId;
      }

      id = R.id.mySwitch;
      Switch mySwitch = ViewBindings.findChildViewById(rootView, id);
      if (mySwitch == null) {
        break missingId;
      }

      id = R.id.night;
      ConstraintLayout night = ViewBindings.findChildViewById(rootView, id);
      if (night == null) {
        break missingId;
      }

      id = R.id.password;
      ConstraintLayout password = ViewBindings.findChildViewById(rootView, id);
      if (password == null) {
        break missingId;
      }

      id = R.id.policy;
      ConstraintLayout policy = ViewBindings.findChildViewById(rootView, id);
      if (policy == null) {
        break missingId;
      }

      id = R.id.save;
      ConstraintLayout save = ViewBindings.findChildViewById(rootView, id);
      if (save == null) {
        break missingId;
      }

      id = R.id.textView11;
      TextView textView11 = ViewBindings.findChildViewById(rootView, id);
      if (textView11 == null) {
        break missingId;
      }

      return new ActivityMenuBinding((ConstraintLayout) rootView, analytics, delete, email,
          followers, following, header, imageAnalytics, imageView19, imageView197, imageView3,
          imageView4, imageView49, imageView79, imageView8, imageView89, imageView9, imageView92,
          imageView97, imageView99, invite, logout, mySwitch, night, password, policy, save,
          textView11);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
