// Generated by view binder compiler. Do not edit!
package com.thesis.fixitadmin.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.github.mikephil.charting.charts.LineChart;
import com.thesis.fixitadmin.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLineGraphBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView EmergencyTv;

  @NonNull
  public final TextView EmergencyTv1;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final CardView cardView1;

  @NonNull
  public final LineChart lineChart;

  @NonNull
  public final LineChart lineChart1;

  @NonNull
  public final RelativeLayout relativeLayout10;

  private ActivityLineGraphBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView EmergencyTv, @NonNull TextView EmergencyTv1, @NonNull CardView cardView,
      @NonNull CardView cardView1, @NonNull LineChart lineChart, @NonNull LineChart lineChart1,
      @NonNull RelativeLayout relativeLayout10) {
    this.rootView = rootView;
    this.EmergencyTv = EmergencyTv;
    this.EmergencyTv1 = EmergencyTv1;
    this.cardView = cardView;
    this.cardView1 = cardView1;
    this.lineChart = lineChart;
    this.lineChart1 = lineChart1;
    this.relativeLayout10 = relativeLayout10;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLineGraphBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLineGraphBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_line_graph, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLineGraphBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.EmergencyTv;
      TextView EmergencyTv = ViewBindings.findChildViewById(rootView, id);
      if (EmergencyTv == null) {
        break missingId;
      }

      id = R.id.EmergencyTv1;
      TextView EmergencyTv1 = ViewBindings.findChildViewById(rootView, id);
      if (EmergencyTv1 == null) {
        break missingId;
      }

      id = R.id.card_view;
      CardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.card_view1;
      CardView cardView1 = ViewBindings.findChildViewById(rootView, id);
      if (cardView1 == null) {
        break missingId;
      }

      id = R.id.lineChart;
      LineChart lineChart = ViewBindings.findChildViewById(rootView, id);
      if (lineChart == null) {
        break missingId;
      }

      id = R.id.lineChart1;
      LineChart lineChart1 = ViewBindings.findChildViewById(rootView, id);
      if (lineChart1 == null) {
        break missingId;
      }

      id = R.id.relativeLayout10;
      RelativeLayout relativeLayout10 = ViewBindings.findChildViewById(rootView, id);
      if (relativeLayout10 == null) {
        break missingId;
      }

      return new ActivityLineGraphBinding((ConstraintLayout) rootView, EmergencyTv, EmergencyTv1,
          cardView, cardView1, lineChart, lineChart1, relativeLayout10);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
