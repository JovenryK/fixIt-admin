// Generated by view binder compiler. Do not edit!
package com.thesis.fixitadmin.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.thesis.fixitadmin.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAnalyticsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView HouseholdText;

  @NonNull
  public final ConstraintLayout bottom;

  @NonNull
  public final BottomNavigationView bottomNavigation;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final CardView cardView1;

  @NonNull
  public final CardView cardView2;

  @NonNull
  public final CardView cardView3;

  @NonNull
  public final CardView cardView4;

  @NonNull
  public final CardView cardView5;

  @NonNull
  public final ConstraintLayout constraintLayout8;

  @NonNull
  public final TextView electricComplaints;

  @NonNull
  public final ConstraintLayout electricComplaints1;

  @NonNull
  public final TextView electricComplaintsText;

  @NonNull
  public final TextView emergency;

  @NonNull
  public final ConstraintLayout emergency1;

  @NonNull
  public final TextView emergencyText;

  @NonNull
  public final RelativeLayout header;

  @NonNull
  public final TextView household;

  @NonNull
  public final ConstraintLayout household1;

  @NonNull
  public final ImageView logout;

  @NonNull
  public final TextView publicIncident;

  @NonNull
  public final ConstraintLayout publicIncident1;

  @NonNull
  public final TextView publicIncidentText;

  @NonNull
  public final TextView roadComplaints;

  @NonNull
  public final ConstraintLayout roadComplaints1;

  @NonNull
  public final TextView roadText;

  private ActivityAnalyticsBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView HouseholdText, @NonNull ConstraintLayout bottom,
      @NonNull BottomNavigationView bottomNavigation, @NonNull CardView cardView,
      @NonNull CardView cardView1, @NonNull CardView cardView2, @NonNull CardView cardView3,
      @NonNull CardView cardView4, @NonNull CardView cardView5,
      @NonNull ConstraintLayout constraintLayout8, @NonNull TextView electricComplaints,
      @NonNull ConstraintLayout electricComplaints1, @NonNull TextView electricComplaintsText,
      @NonNull TextView emergency, @NonNull ConstraintLayout emergency1,
      @NonNull TextView emergencyText, @NonNull RelativeLayout header, @NonNull TextView household,
      @NonNull ConstraintLayout household1, @NonNull ImageView logout,
      @NonNull TextView publicIncident, @NonNull ConstraintLayout publicIncident1,
      @NonNull TextView publicIncidentText, @NonNull TextView roadComplaints,
      @NonNull ConstraintLayout roadComplaints1, @NonNull TextView roadText) {
    this.rootView = rootView;
    this.HouseholdText = HouseholdText;
    this.bottom = bottom;
    this.bottomNavigation = bottomNavigation;
    this.cardView = cardView;
    this.cardView1 = cardView1;
    this.cardView2 = cardView2;
    this.cardView3 = cardView3;
    this.cardView4 = cardView4;
    this.cardView5 = cardView5;
    this.constraintLayout8 = constraintLayout8;
    this.electricComplaints = electricComplaints;
    this.electricComplaints1 = electricComplaints1;
    this.electricComplaintsText = electricComplaintsText;
    this.emergency = emergency;
    this.emergency1 = emergency1;
    this.emergencyText = emergencyText;
    this.header = header;
    this.household = household;
    this.household1 = household1;
    this.logout = logout;
    this.publicIncident = publicIncident;
    this.publicIncident1 = publicIncident1;
    this.publicIncidentText = publicIncidentText;
    this.roadComplaints = roadComplaints;
    this.roadComplaints1 = roadComplaints1;
    this.roadText = roadText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAnalyticsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAnalyticsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_analytics, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAnalyticsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Household_text;
      TextView HouseholdText = ViewBindings.findChildViewById(rootView, id);
      if (HouseholdText == null) {
        break missingId;
      }

      id = R.id.bottom;
      ConstraintLayout bottom = ViewBindings.findChildViewById(rootView, id);
      if (bottom == null) {
        break missingId;
      }

      id = R.id.bottom_navigation;
      BottomNavigationView bottomNavigation = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigation == null) {
        break missingId;
      }

      id = R.id.card_view;
      CardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.card_view1;
      CardView cardView1 = ViewBindings.findChildViewById(rootView, id);
      if (cardView1 == null) {
        break missingId;
      }

      id = R.id.card_view2;
      CardView cardView2 = ViewBindings.findChildViewById(rootView, id);
      if (cardView2 == null) {
        break missingId;
      }

      id = R.id.card_view3;
      CardView cardView3 = ViewBindings.findChildViewById(rootView, id);
      if (cardView3 == null) {
        break missingId;
      }

      id = R.id.card_view4;
      CardView cardView4 = ViewBindings.findChildViewById(rootView, id);
      if (cardView4 == null) {
        break missingId;
      }

      id = R.id.card_view5;
      CardView cardView5 = ViewBindings.findChildViewById(rootView, id);
      if (cardView5 == null) {
        break missingId;
      }

      id = R.id.constraintLayout8;
      ConstraintLayout constraintLayout8 = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout8 == null) {
        break missingId;
      }

      id = R.id.electric_complaints;
      TextView electricComplaints = ViewBindings.findChildViewById(rootView, id);
      if (electricComplaints == null) {
        break missingId;
      }

      id = R.id.electric_complaints1;
      ConstraintLayout electricComplaints1 = ViewBindings.findChildViewById(rootView, id);
      if (electricComplaints1 == null) {
        break missingId;
      }

      id = R.id.electric_complaints_text;
      TextView electricComplaintsText = ViewBindings.findChildViewById(rootView, id);
      if (electricComplaintsText == null) {
        break missingId;
      }

      id = R.id.emergency;
      TextView emergency = ViewBindings.findChildViewById(rootView, id);
      if (emergency == null) {
        break missingId;
      }

      id = R.id.emergency1;
      ConstraintLayout emergency1 = ViewBindings.findChildViewById(rootView, id);
      if (emergency1 == null) {
        break missingId;
      }

      id = R.id.emergency_text;
      TextView emergencyText = ViewBindings.findChildViewById(rootView, id);
      if (emergencyText == null) {
        break missingId;
      }

      id = R.id.header;
      RelativeLayout header = ViewBindings.findChildViewById(rootView, id);
      if (header == null) {
        break missingId;
      }

      id = R.id.household;
      TextView household = ViewBindings.findChildViewById(rootView, id);
      if (household == null) {
        break missingId;
      }

      id = R.id.household1;
      ConstraintLayout household1 = ViewBindings.findChildViewById(rootView, id);
      if (household1 == null) {
        break missingId;
      }

      id = R.id.logout;
      ImageView logout = ViewBindings.findChildViewById(rootView, id);
      if (logout == null) {
        break missingId;
      }

      id = R.id.public_incident;
      TextView publicIncident = ViewBindings.findChildViewById(rootView, id);
      if (publicIncident == null) {
        break missingId;
      }

      id = R.id.public_incident1;
      ConstraintLayout publicIncident1 = ViewBindings.findChildViewById(rootView, id);
      if (publicIncident1 == null) {
        break missingId;
      }

      id = R.id.public_incident_text;
      TextView publicIncidentText = ViewBindings.findChildViewById(rootView, id);
      if (publicIncidentText == null) {
        break missingId;
      }

      id = R.id.road_complaints;
      TextView roadComplaints = ViewBindings.findChildViewById(rootView, id);
      if (roadComplaints == null) {
        break missingId;
      }

      id = R.id.road_complaints1;
      ConstraintLayout roadComplaints1 = ViewBindings.findChildViewById(rootView, id);
      if (roadComplaints1 == null) {
        break missingId;
      }

      id = R.id.road_text;
      TextView roadText = ViewBindings.findChildViewById(rootView, id);
      if (roadText == null) {
        break missingId;
      }

      return new ActivityAnalyticsBinding((ConstraintLayout) rootView, HouseholdText, bottom,
          bottomNavigation, cardView, cardView1, cardView2, cardView3, cardView4, cardView5,
          constraintLayout8, electricComplaints, electricComplaints1, electricComplaintsText,
          emergency, emergency1, emergencyText, header, household, household1, logout,
          publicIncident, publicIncident1, publicIncidentText, roadComplaints, roadComplaints1,
          roadText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
