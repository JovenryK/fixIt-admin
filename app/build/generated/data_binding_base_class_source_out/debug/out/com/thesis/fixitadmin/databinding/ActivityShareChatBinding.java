// Generated by view binder compiler. Do not edit!
package com.thesis.fixitadmin.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.thesis.fixitadmin.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityShareChatBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout header;

  @NonNull
  public final ImageView imageView3;

  @NonNull
  public final ImageView imgPassword;

  @NonNull
  public final EditText password;

  @NonNull
  public final ProgressBar pg;

  @NonNull
  public final RelativeLayout relativeLayout4;

  @NonNull
  public final RelativeLayout rl;

  @NonNull
  public final RecyclerView users;

  private ActivityShareChatBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout header, @NonNull ImageView imageView3,
      @NonNull ImageView imgPassword, @NonNull EditText password, @NonNull ProgressBar pg,
      @NonNull RelativeLayout relativeLayout4, @NonNull RelativeLayout rl,
      @NonNull RecyclerView users) {
    this.rootView = rootView;
    this.header = header;
    this.imageView3 = imageView3;
    this.imgPassword = imgPassword;
    this.password = password;
    this.pg = pg;
    this.relativeLayout4 = relativeLayout4;
    this.rl = rl;
    this.users = users;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityShareChatBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityShareChatBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_share_chat, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityShareChatBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.header;
      ConstraintLayout header = ViewBindings.findChildViewById(rootView, id);
      if (header == null) {
        break missingId;
      }

      id = R.id.imageView3;
      ImageView imageView3 = ViewBindings.findChildViewById(rootView, id);
      if (imageView3 == null) {
        break missingId;
      }

      id = R.id.img_password;
      ImageView imgPassword = ViewBindings.findChildViewById(rootView, id);
      if (imgPassword == null) {
        break missingId;
      }

      id = R.id.password;
      EditText password = ViewBindings.findChildViewById(rootView, id);
      if (password == null) {
        break missingId;
      }

      id = R.id.pg;
      ProgressBar pg = ViewBindings.findChildViewById(rootView, id);
      if (pg == null) {
        break missingId;
      }

      id = R.id.relativeLayout4;
      RelativeLayout relativeLayout4 = ViewBindings.findChildViewById(rootView, id);
      if (relativeLayout4 == null) {
        break missingId;
      }

      id = R.id.rl;
      RelativeLayout rl = ViewBindings.findChildViewById(rootView, id);
      if (rl == null) {
        break missingId;
      }

      id = R.id.users;
      RecyclerView users = ViewBindings.findChildViewById(rootView, id);
      if (users == null) {
        break missingId;
      }

      return new ActivityShareChatBinding((ConstraintLayout) rootView, header, imageView3,
          imgPassword, password, pg, relativeLayout4, rl, users);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
